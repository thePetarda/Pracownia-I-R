import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

oporr = np.array([5.027027027, 5.508896797, 5.586206897, 6.96373057, 9.315789474, 11.12977099, 12.8630137, 13.79268293, 14.1849711, 15.13483146, 16.28125, 16.99038462, 18.2739726, 19.1637931, 19.375, 20.22222222, 21.18897638, 21.69402985, 22.51612903, 23.27586207, 23.33557047, 24.1, 24.87096774, 25.01538462, 26.04216867, 26.07194245, 27.2173913, 27.53424658, 28.62162162, 29.325, 30.67455621, 31.6424581, 33.96721311, 34.21538462, 35.58415842])
mocc = np.array([0.000764667, 0.00302075, 0.004698, 0.007205333, 0.013452, 0.021222, 0.030465333, 0.041218667, 0.047171333, 0.053281333, 0.066688, 0.081674667, 0.097382, 0.114608, 0.124, 0.132678, 0.151892, 0.173128, 0.194742, 0.2175, 0.230254667, 0.241, 0.265566667, 0.293583333, 0.318941333, 0.349816667, 0.35995, 0.407583333, 0.435366667, 0.521333333, 0.6084, 0.704066667, 0.78995, 0.9035, 1.008316667])
danee = np.array([mocc, oporr])
# print(dane)
opor = np.array([5.027027027, 5.508896797, 5.586206897, 6.96373057, 9.315789474, 11.12977099, 12.8630137, 13.79268293, 14.1849711])
moc = np.array([0.000764667, 0.00302075, 0.004698, 0.007205333, 0.013452, 0.021222, 0.030465333, 0.041218667, 0.047171333])
dane = np.array([moc, opor])

m, o = dane
p, r = danee

niepewnoscir = np.array([0.81893247, 0.431568429, 0.348511441, 0.314739736, 0.267279265, 0.233225982, 0.20984819, 0.187110587, 0.177497498, 0.172802256, 0.160540402, 0.148391448, 0.141292297, 0.133615883, 0.129218953, 0.127848855, 0.12256584, 0.116292998, 0.111913127, 0.10785493, 0.104975389, 0.104459674, 0.101275138, 0.0966374, 0.094835414, 0.090615748, 0.091529974, 0.086588787, 0.08565685, 0.0793863, 0.07543545, 0.071417354, 0.070316492, 0.066048626, 0.064022151])
niepewnoscip = np.array([0.000123541, 0.000234509, 0.000290414, 0.000321951, 0.000380098, 0.000436684, 0.00048669, 0.000546746, 0.000576785, 0.000593564, 0.000640448, 0.000693989, 0.000731073, 0.00077481, 0.000801622, 0.000812026, 0.000849305, 0.00089644, 0.000933803, 0.000971211, 0.000998067, 0.00100541, 0.001039658, 0.001090151, 0.001114753, 0.001166886, 0.001159865, 0.001227613, 0.001246001, 0.001348341, 0.001426808, 0.001513441, 0.001552702, 0.001655508, 0.00171901 ])
# print(niepewnosciu)

plt.xlabel("opór [Ω]")
plt.ylabel("moc [V]")
plt.errorbar(r, p, yerr=niepewnoscir, xerr=niepewnoscip, label='Zależność mocy od oporu', fmt='bo', capsize=0.5)

plt.show()


def line(x, a, b):
    return a * x + b


par, cov = curve_fit(line, o, m)

print(par)
perr = np.sqrt(np.diag(cov))
# print(cov)
print(perr)

line = []

for elem in oporr:
    line.append(par[0] * elem + par[1])


plt.plot(oporr, line, 'r')
plt.show()
plt.savefig('Moc.png')
